on:
  workflow_call:
    inputs:
      context:
        type: string
        required: false
        default: "./"
      repository:
        type: string
        required: false
        default: "registry.internal.huggingface.tech/hf-endpoints"
      image:
        type: string
        required: true
      build_args:
        type: string
        required: false
        default: ""
      dockerfile:
        type: string
        required: false
        default: "Dockerfile"
    secrets:
      REGISTRY_USERNAME:
        required: true
      REGISTRY_PASSWORD:
        required: true
      TAILSCALE_AUTHKEY:
        required: true

jobs:
  buildx:
    runs-on: [single-gpu, nvidia-gpu, t4, ci]
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Tailscale
        uses: huggingface/tailscale-action@v1
        with:
          authkey: ${{ secrets.TAILSCALE_AUTHKEY }}
          slackChannel: ${{ secrets.SLACK_CIFEEDBACK_CHANNEL }}
          slackToken: ${{ secrets.SLACK_CIFEEDBACK_BOT_TOKEN }}
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.0.0
        with:
          install: true

      - name: Login to container registry
        uses: docker/login-action@v2.0.0
        with:
          registry: ${{ inputs.repository }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4

      - name: Build and push image to container registry
        uses: docker/build-push-action@v3.0.0
        with:
          push: true
          context: ${{ inputs.context }}
          build-args: ${{ inputs.build_args }}
          file:  ${{ inputs.context }}/${{ inputs.dockerfile }}
          # tags: ${{ inputs.repository }}/${{ inputs.image }}:sha-${{ env.GITHUB_SHA_SHORT }},${{ inputs.repository }}/${{ inputs.image }}:latest
          tags: ${{ inputs.repository }}/${{ inputs.image }}:testraph
      - name: Tailscale Wait
        if: ${{ failure() || runner.debug == '1' }}
        uses: huggingface/tailscale-action@v1
        with:
           waitForSSH: true
